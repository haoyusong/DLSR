<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>  
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<rfc
  xmlns:xi="http://www.w3.org/2001/XInclude"
  category="std"
  consensus="true"
  docName="draft-song-dlsr-srh-00"
  ipr="trust200902"
  submissionType="IETF"
  xml:lang="en"
  version="3">

<front>
    <title abbrev="DLSR SRH">IPv6 Domain Level Segment Routing using SRH</title>
    
    <author fullname="Haoyu Song" initials="H." surname="Song">
      <organization>Futurewei Technologies</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <email>haoyu.song@futurewei.com</email>
      </address>
    </author>
	
	<author fullname="Alvaro Retana" initials="A." surname="Retana">
      <organization>Futurewei Technologies</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <email>aretana@futurewei.com</email>
      </address>
    </author>

  <date year="2023"/>

  <area>Routing</area>
  <workgroup>Internet Engineering Task Force</workgroup>

  <keyword>IPv6</keyword>
  <keyword>SRv6</keyword>
  <keyword>SRH</keyword>
  <keyword>Domain</keyword>
  <keyword>Source Routing</keyword>

  <abstract>
    <t>This document describes Domain-Level Segment Routing (DLSR). Each domain is virtualized as a single node and encoded as a Domain SID (DSID) in the existing Service Routing Header (SRH).</t>

    <t>The domains involved belong to a single Segment Routing Domain, as defined in RFC 8402. DLSR can be used to better support end-to-end quality of service, traffic privacy and security, domain-level policy, and cross-domain traffic engineering.</t>
  </abstract>
</front>

  <middle>
    <section anchor="Introduction" numbered="true" toc="default">
      <name>Introduction</name>
    <t>
    This document describes Domain-Level Segment Routing (DLSR). Each domain is virtualized as a single node and encoded as a Domain SID (DSID) in the existing Service Routing Header (SRH) <xref target="RFC8457"/>.
    </t>
    <t>
    The domains involved belong to a single Segment Routing Domain, as defined in <xref target="RFC8402"/>. DLSR can be used to better support end-to-end quality of service, traffic privacy and security, domain-level policy, and cross-domain traffic engineering.
    </t>
    <t>
    DLSR is described in <xref target="DLSR"/>.  The DSID is specified in <xref target="dsidformat"/>.  Examples of use cases are presented in <xref target="usecase"/>.
    </t>
	  
      <section anchor="Terminology" numbered="true" toc="default">
        <name>Terminology</name>
	
        <t>
        This document uses the terminology defined in <xref target="RFC8402"/>, <xref target="RFC8754"/>, and <xref target="RFC8986"/>.
        </t>
	
      </section>
      <section anchor="requirements">
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
          RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
          interpreted as described in BCP 14 <xref target="RFC2119"/>
          <xref target="RFC8174"/> when, and only when, they appear in
          all capitals, as shown here.</t>
      </section>
    </section>
 
 	
 
    <section anchor="DLSR" numbered="true" toc="default">
      <name>Domain Level Segment Routing</name>

    <section anchor="dsidformat">
	  <name>Domain SID</name>
	  

     <t>
	    The format of the DSID is shown in <xref target="figdsid"/>.
     </t>

     <figure anchor="figdsid">
        <name>DSID Format</name>
        <artwork align="center" name="figdsid" type="" alt=""><![CDATA[
		
0                                                              127		
+-----------------+-------------------+-------------------------+
|Prefix (variable)| Domain ID (32-bit)|    Function+Argument    |
+-----------------+-------------------+-------------------------+
|<---- block  --->|<----- node ------>|
|<----------- locator  -------------->|


         ]]></artwork>
      </figure>

     <t>
     The locator (LOC) of the DSID is represented as B:N <xref target ="RFC8986"/>, where B (block/Prefix) is the IPv6 prefix allocated for DSIDs and N (node/Domain ID) is the identifier of the domain instantiating the SID. 
     </t>
     <t>
     The use of a globally-assigned (to the SR domain) Prefix that indicates the SID type is DSID is RECOMMENDED. The Domain ID is a 32-bit number that uniquely identifies a domain. The Domain ID can be set to the autonomous system (AS) number <xref target="RFC6793"/>.
     </t>
     <t>
     A DSID using a common locator should be advertised by all the domain border routers (DBR) of the domain identified by the Domain ID. The result is an anycast address to the domain. Therefore, a packet destined to a DSID (i.e., the destination IP address is the routing table is the locator) can reach the domain through one of its DBRs, according to the routing computation result. 
     </t>
     <t>
     The remaining bits can be used to encode functions and arguments for network programming.  The definition and use of any such behaviors are outside the scope of this document.
     </t>
      
	  </section>
	  
	  <section anchor="srh">
	  <name>Use of the Segment Routing Header (SRH)</name>
	  
	  <t>
    No changes are required to the SRH <xref target="RFC8754"/>. The segment list can contain only DSIDs to specify a domain-level path, loose or strict. It can also contain a mix of SIDs in any number or order.  However, since a DSID represents a domain, the following rules apply:
	  </t>
	  <ul>
    <li>The DSID of Domain ID X MUST NOT be routable within that domain.  Therefore, an SR Node processing the SRv6 packet MUST drop it if the destination address (DA) would result from a DSID for the local Domain ID.</li>
    <li>The next segment endpoint of a domain-level segment endpoint should usually be located outside of the domain, because the entire domain is considered as a single endpoint.
    </li>
    <li>An exception to the above rule is that: the last segment endpoint (i.e., the final destination) can be within a domain-level segment endpoint. This is usually used for strict DLSR where the complete domain-level path is specified.
    </li>
    </ul>
	  
	  </section>
	  
      <section anchor="DLSRFWD">
	  <name>DLSR Forwarding Examples</name>
		
	  <t>
    In general, the SR Source Node <xref target="RFC8754"/> pushes an IPv6 header with its own SRH containing only a list of DSIDs or a mix with other SID types. <xref target="fignet"/> is the reference to describe the forwarding process using the abstract representation from <xref target="RFC8754"/>. The DSID for a Domain ID X is represented as ASX.  In <xref target="fignet"/>, all the nodes shown are DBRs and DLSR-capable.
	  </t>

	  <figure anchor="fignet">
        <name>DLSR Forwarding Example I</name>
        <artwork align="center" name="fignet" type="" alt=""><![CDATA[

      AS64500        AS64501             AS64502        AS64505
  +-------------+ +------------+      +------------+ +-------------+
  | Host    DBR | | DBR    DBR |      | DBR    DBR | | DBR    Host |
  | +---+   +-+ | | +-+    +-+ |      | +-+    +-+ | | +-+   +---+ |
  | |Src|...|x+-+-+-+a|....|b+-+------+-+d|....|e+-+-+-+y|...|Dst| |
  | +---+   +-+ | | +-+    +++ |      | +-+    +-+ | | +-+   +---+ |
  |             | |  : DBR  :  |      |  :  DBR :  | |  : DBR  :   |
  |             | |  : +-+  :  |      |  :  +-+ :  | |  : +-+  :   |
  |             | |  :.|c|..:  |      |  :..|k|.:  | |  :.|z|..:   |
  |             | |    +++     |      |     +++    | |    +++      |
  +-------------+ +-----+------+      +------+-----+ +-----+-------+
                        |                    |             |
                     +--+---------+ +--------+--+          |
                     |  |         | |        |  |          |
                     | +++    +-+ | | +-+   +++ |          |
                     | |f|....|g+-+-+-+h|...|i+-+----------+
                     | +-+    +-+ | | +-+   +-+ |
                     | DBR    DBR | | DBR   DBR |
                     +------------+ +-----------+
                        AS64503        AS64504
		]]></artwork>
      </figure>
	 <t>
   For example, host Src (in AS64500) sends a packet to host Dst (in AS64505) via an SR Policy &lt;AS64501, AS64502, AS64505&gt;, the packet is
   </t>
   <t>
   P1: (ASrc,AS64501)(ADst, AS64505, AS64502, AS64501; SL=3)
   </t>
   <t>
   Node x acts as transit node for packet P1 and forwards it towards AS64501.  In this case, there is only one DBR in AS64501 advertising the DSID (node a).
   </t>
   <t>
   Node a receives packet P1 and, using the logic in <xref target="RFC8754"/>, sends packet
   </t>
   <t>
   P2: (ASrc,AS64502)(ADst, AS64505, AS64502, AS64501; SL=2)
   </t>
   <t>
   toward AS64502.  In this case, the internal metrics will determine the path toward DBR d, either through transit node b or transit nodes c and b.  Note that there wasn't a connection between AS64501 and AS64502, or DBR d didn't advertise the DSID (but DBR k did) then the packet would be forwarded through AS64503 and AS64504.
   </t>
   <t>
   Node d receives packet P2 and, using the logic in <xref target="RFC8754"/>, sends packet
   </t>
   <t>
   P3: (ASrc,AS64505)(ADst, AS64505, AS64502, AS64501; SL=1)
   </t>
   <t>
   toward AS64505.  In this case, the internal metrics will determine the path toward DBR y, either through transit node e or transit nodes k and e.  Note that there wasn't a connection between AS64502 and AS64505, or DBR y didn't advertise the DSID (but DBR z did) then the packet would be forwarded through AS64504.
   </t>
   <t>
   Node y receives packet P3 and, using the logic in <xref target="RFC8754"/>, sends packet
   </t>
   <t>
   P4: (ASrc,ADst)(ADst, AS64505, AS64502, AS64501; SL=0)
   </t>
   <t>
   on the interface toward Dst.
   </t>
   <t>
   In another example, host Src sends a packet to host Dst via an SR Policy &lt;AS64503, Ae&gt;, the packet is
   </t>
   <t>
   P5: (ASrc,AS64503)(ADst,Ae,A64503; SL=2)
   </t>
   <t>
   Nodes x, a, and c act as transit nodes for packet P5 and forward it towards AS64503.
   </t>
   <t>
   Node f receives packet P5 and, using the logic in <xref target="RFC8754"/>, sends packet
   </t>
   <t>
   P6: (ASrc,Ae)(ADst,Ae,A64503; SL=1)
   </t>
   <t>
   toward node e.  In this case, the shortest/best path to reach node e is through AS64504.  Nodes g, h, i, and k act as transit nodes for packet P6.
   </t>
   <t>
   Node e receives packet P6 and, using the logic in <xref target="RFC8754"/>, sends packet
   </t>
   <t>
   P7: (ASrc,ADst)(ADst,Ae,A64503; SL=0)
   </t>
   <t>
   toward AS64505, where node Dst is located.
   </t>
   <t>
   Note that if the Penultimate Segment Pop (PSP) behavior <xref target="RFC8986"/> is used, node e can remove the SRH before forwarding the packet to node Dst.
   </t>
	  </section>
 
 
      <section anchor="compression" numbered="true" toc="default">
        <name>DLSR SRH Compression</name>
		<t>DLSR SIDs share the common prefix, and each has a 32-bit domain ID, so both NEXT-C-SID flavor and REPLACE-C-SID flavor as specified in <xref target="I-D.ietf-spring-srv6-srh-compression"/> can be supported to reduce the SRH overhead.
        </t>
   
      </section>
  
   
     <section anchor="compare" numbered="true" toc="default">
	    <name>Domain-level Segment vs. Node-level Segment</name>
        <t>To some extent, a domain-level segment is equivalent to two node-level segments (one for the domain ingress DBR and the other for the domain egress DBR). However, each domain only needs a globally unique SID to represent but it may have many ingress and egress DBRs. Using a domain-level segment is more compact than using two node-level segments, and support multihoming without exposing the domain topology and configuration. Moreover, a domain-level segment unambiguously defines the domain boundary (the node-level segment lacks such a feature) so the use cases discussed in <xref target="usecase" /> can be easily supported.</t>
   		
		<t>Although the DSID can also be used as a binding SID to bind some local policy as configured by the global controller, in practice, the intra-domain forwarding scheme and policy are preferred to be kept private and controlled locally. The domain-level segment makes such provision straightforward.</t>
		
     </section>
	 
   </section>
  
  <section anchor="usecase" numbered="true" toc="default">
	  <name>Use Cases</name>
	  
	  
	  <section anchor="qos" numbered="true" toc="default">
	    <name>End-to-End Cross-Domain QoS</name>
		<t>Cross-domain QoS is a long-standing problem. It needs a solution for the emerging Internet-scale applications such as metaverse, 3D live events, and remote interactive operations. In the current Internet, since the accountable entity such as domain is invisible at data plane, it is difficult to assign the responsibilities and attribute the service results. By supporting domain-level routing and forwarding, a business model can be fostered to enable Internet-scale end-to-end QoS with the right level of manageable entity. The limited number of "hops" corresponds to the service providers who have vested interests to support the value-added services and full control of the means to achieve the QoS goal. The domain level routing and forwarding also decouple the intra-domain and inter-domain, allowing each domain operator to independently innovate on intra-domain traffic engineering and forwarding optimizations. The explicit domain boundary also allows the existing OAM standards and tools to be applied at the domain level by considering each domain as a node, making domain-level SLA auditable.  
		</t>
		
      </section>
	  
	  
	  <section anchor="security" numbered="true" toc="default">
		<name>Traffic Security and Privacy</name>
		<t>For various business or legal reasons, certain customer traffic must be retained within specific domains. On the other hand, due to disaster, outrage, and other political reasons, certain customer traffic must avoid specific domains. By specifying a domain-level path, one can avoid or include domains for any security and privacy reasons. One can also guide traffic to certain domains for special treatments such as security screening and lawful interception.</t>
	  </section>
	  
	  
	  <section anchor="policy" numbered="true" toc="default">
	    <name>Domain Level Routing Policy</name>
		<t>With a domain-level path, we can directly express the peering and routing preferences at data plane. Domain-level routing policies
		   are easy to be specified. For example, we can pin certain traffic to a specific domain where one of the anycast destinations is located.
	    </t>
	  </section>
	  
	  
	  <section anchor="te" numbered="true" toc="default">
	    <name>Domain Level Traffic Engineering</name>
	    <t>One can provision multiple domain-level paths with the same of different service level. Path choosing or load balancing can be applied on these paths to achieve the idea performance.</t>
	  </section>
	  
	  <section anchor="sfc" numbered="true" toc="default">
	    <name>Service Function Chaining (SFC)</name>
	    <t>Domain level source routing allows service providers to collaborate on providing distributed network services. SFC is a general technique to initiate an ordered set of service functions (e.g., firewall, load balancing, WAN optimization, NAT, and encryption) in network and steer the user traffic through it. Traditionally it can only be used by a single service provider. With DLSR, it is easier to negotiate a plan to allocate different network functions in different domains. The service providers are compensated by the nature of the functions and the contribution of each participating domain. The SFC descriptor (e.g., <xref target="RFC8300">NSH</xref>) can be carried as a SRH option.</t>
	  </section>
	  
	  <section anchor="pv" numbered="true" toc="default">
	    <name>Path Validation</name>
	    <t>DLSR provides a natural way to support path validation at the domain level. The path information is kept in the SRH and can be verified at each segment endpoint. Various verification algorithms and protocols can be used (e.g., <xref target="RFC9197">IOAM POT</xref>).</t>
	  </section>
	  
	  <section anchor="hs" numbered="true" toc="default">
	    <name>Hierarchical Segment Routing</name>
		<t>When the SR domain covers multiple ASes, DLSR can be used to effectively reduce the packet overhead and protect the privacy. In this case, the packet is forwarded at the domain level. Each DSID is configured as a binding SID, so at each domain border, a local SR policy is applied to tunnel through the domain. On the data plane, any domain do not know the policy of the other domains. </t>
	  </section>
	  
	</section>
  
  
    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      
      <t>DLSR shares all the security considerations for SRv6. In DLSR, one AS is considered a single node in the SR domain,
         so the SR domain is beyond the control of any single AS. It is conceivable a higher level entity may be needed to oversee the 
         domain-level path provision, or stricter security and authentication measurements need to be applied to avoid any abuse or attack. </t>
      
	  <t>IETF has assembled a team of expert to provide a solid security analysis of SRv6. The output is applicable to DLSR as well, and DLSR 
	     also provides new perspective for analysis.</t>
    </section>
    
	<section anchor="IANA" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document requires no IANA actions.</t>
    </section>
	
	<section anchor="Acknowledgments" numbered="true" toc="default">
      <name>Acknowledgments</name>
	  <t>The authors would like to thank Tony Li, Toerless Eckert, Cheng Li, and Nan Geng for their comments and suggestions.</t>
    </section>
	
	
  </middle>

<back>
    
      <references title="Normative References">
	    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>	
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8457.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8754.xml"/> 
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8986.xml"/>
		  </references>
	    <references title="Informative References">
	    <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-srv6-srh-compression.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6793.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8300.xml"/>
	    <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9197.xml"/>
      </references>
    
  </back>
  
</rfc>
